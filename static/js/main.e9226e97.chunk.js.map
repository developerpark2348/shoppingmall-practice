{"version":3,"sources":["data.js","Detail.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","connect","state","reducer","alert열렸니","recuer2","useState","alert","alert변경","useParams","history","useHistory","찾은상품","shoes","find","상품","누른탭변경","스위치","arr","localStorage","getItem","JSON","parse","push","Set","setItem","stringify","타이머","setTimeout","clearTimeout","className","src","width","onClick","재고변경","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","dispatch","type","payload","name","quan","reducer2","Table","responsive","map","a","i","데이터","Card","App","Data","shoes변경","Navbar","bg","expand","Brand","as","to","Toggle","aria-controls","Collapse","exact","path","Jumbotron","Button","axios","get","then","result","data","catch","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","기본state","store","createStore","combineReducers","액션","copy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9226e97.chunk.js","sourcesContent":["export default\r\n[\r\n  {\r\n    id : 0,\r\n    title : \"White and Black\",\r\n    content : \"Born in France\",\r\n    price : 120000\r\n  },\r\n\r\n  {\r\n    id : 1,\r\n    title : \"Red Knit\",\r\n    content : \"Born in Seoul\",\r\n    price : 110000\r\n  },\r\n\r\n  {\r\n    id : 2,\r\n    title : \"Grey Yordan\",\r\n    content : \"Born in the States\",\r\n    price : 130000\r\n  }\r\n]\r\n","/* eslint-disable */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Nav } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport './Detail.css'\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nlet 박스 = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n    font-size: 25px;\r\n    color: ${ props => props.색상 }\r\n`;\r\n\r\nfunction Detail(props){\r\n\r\n    let [alert, alert변경] = useState(true);\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    let 찾은상품 = props.shoes.find(function(상품){\r\n        return 상품.id == id\r\n    })\r\n    let [누른탭, 누른탭변경] = useState(0);\r\n    let [스위치, 스위치변경] = useState(false);\r\n\r\n    useEffect(()=>{\r\n      var arr = localStorage.getItem('watched');\r\n      if( arr == null ) { arr = [] } else { arr = JSON.parse(arr); }\r\n\r\n      arr.push(id);\r\n      arr = new Set(arr) //Set자료형으로 변경해줌으로서 중복을 제거해줌.\r\n      arr = [...arr]; // 괄호를 벗겨줌.\r\n\r\n      localStorage.setItem('watched', JSON.stringify(arr));\r\n\r\n    }, [] );\r\n\r\n    useEffect(()=>{\r\n        let 타이머 = setTimeout(()=>{\r\n          alert변경(false)\r\n          return ()=> { clearTimeout(타이머) }\r\n        }, 2000)\r\n    },[/*실행 조건을 넣는 칸. [alert, Data]=> alert,Data가 변경시에만 실행. 여러개 가능 [](꽁백)시 로드되었을때 한번만 실행함.*/]);\r\n\r\n    return(\r\n      <div className=\"container\">\r\n          <박스>\r\n            <제목 색상=\"black\">상세페이지</제목>\r\n          </박스>\r\n\r\n      {\r\n        alert === true\r\n        ? (<div className=\"my-alert2\">\r\n          <p>재고가 얼마 남지 않았습니다.</p>\r\n          </div>)\r\n        : null\r\n      }\r\n\r\n            <div className=\"Watched\">\r\n              안녕하세요\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n              </div>\r\n              <div className=\"col-md-6 mt-4\">\r\n                <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n                <p>{찾은상품.content}</p>\r\n                <p>{찾은상품.price}</p>\r\n\r\n                <Info 재고={props.재고}></Info>\r\n\r\n                <button className=\"btn btn-danger\" onClick={()=>{\r\n                  props.재고변경([9,11,12])\r\n                }}>주문하기</button> \r\n                <button className=\"btn btn-danger\" onClick={()=>{\r\n                    history.goBack();\r\n                }}>뒤로가기</button> \r\n              </div>\r\n            </div>\r\n\r\n            <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"link-0\" onClick={()=>{ 스위치변경(false); 누른탭변경(0) }}>Option 0</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"link-1\" onClick={()=>{ 스위치변경(false); 누른탭변경(1) }}>Option 1</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"link-2\" onClick={()=>{ 스위치변경(false); 누른탭변경(2) }}>Option 2</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n\r\n            <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n              <TabContent 누른탭={누른탭} 스위치변경={스위치변경}/>\r\n            </CSSTransition>\r\n\r\n            <button onClick={()=>{ props.dispatch( { type : '항목추가', payload : {id : 찾은상품.id, name : 찾은상품.title, quan : 1}}); history.push('/Cart')}}>주문하기</button>\r\n            \r\n      </div> \r\n    )\r\n  }\r\n\r\nfunction TabContent(props){\r\n  \r\n  useEffect(()=>{\r\n    props.스위치변경(true)\r\n  });\r\n  \r\n  if (props.누른탭 === 0) {\r\n  return <div> 0번째 내용입니다. </div>\r\n  } else if (props.누른탭 === 1){\r\n  return <div> 1번째 내용입니다. </div>\r\n  } else if (props.누른탭 === 2){\r\n  return <div> 2번째 내용입니다. </div>\r\n  }\r\n\r\n}\r\n\r\nfunction Info(props) {\r\n  return (\r\n    <p>재고: {props.재고[0]}</p>\r\n  )\r\n}\r\n\r\nfunction state를props화(state){\r\n  return {\r\n    state : state.reducer,\r\n    alert열렸니 : state.recuer2\r\n  }\r\n}\r\n\r\nexport default connect(state를props화)(Detail)","import React from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Cart(props){\r\n    return(\r\n        <div>\r\n\r\n            <div>\r\n            <Table responsive=\"sm\">\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>상품명</th>\r\n                    <th>수량</th>\r\n                    <th>증가</th>\r\n                    <th>감소</th>\r\n                </tr>\r\n                { props.state.map((a,i)=>{\r\n                    return (\r\n                    <tr key={i}>\r\n                        <td>{a.id}</td>\r\n                        <td>{a.name}</td>\r\n                        <td>{a.quan}</td>\r\n                        <td><button onClick={()=>{ props.dispatch({type: '수량증가', 데이터 : a.id}) }}> + </button></td>\r\n                        <td><button onClick={()=>{ props.dispatch({type: '수량감소', 데이터 : a.id}) }}> - </button></td>\r\n                    </tr>\r\n                    )\r\n                })}\r\n            </Table>\r\n            { props.alert열렸니 === true\r\n                ?( <div className=\"my-alert2\">\r\n                    <p>지금 구매하시면 20% 할인</p>\r\n                    <button onClick={()=>{props.dispatch({type: '닫기'})}}>닫기</button>\r\n                </div> )\r\n                : null\r\n            }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction state를props화(state){\r\n    return {\r\n        state : state.reducer,\r\n        alert열렸니 : state.reducer2\r\n    }\r\n}\r\n\r\nexport default connect(state를props화)(Cart);","/* eslint-disable */\n\nimport React, { useState } from 'react';\nimport { Navbar,Nav,NavDropdown,Jumbotron,Button } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport Detail from './Detail.js';\nimport axios from 'axios';\nimport Cart from './Cart.js';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10,11,12]);\n\n  return (\n    <div className=\"App\">\n      \n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand as={Link} to=\"/\">Shoe Shop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">홈</Nav.Link>\n            <Nav.Link as={Link} to=\"/Cart\">장바구니</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n    <Switch>\n\n      <Route exact path=\"/\">\n\n        <Jumbotron className=\"background\">\n          <h1>20% season OFF</h1>\n          <p>\n            This is a simple hero unit, a simple jumbotron-style component for calling\n            extra attention to featured content or information.\n          </p>\n          <p>\n            <Button variant=\"primary\">Learn more</Button>\n          </p>\n        </Jumbotron>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            {\n              shoes.map((a, i) =>{\n                return <Card shoes={shoes[i]} i={i} key={i}/>\n              })\n            }\n          </div>\n          <button className=\"btn btn-primary\" onClick={()=>{\n\n            axios.get('https://codingapple1.github.io/shop/data2.json')\n            .then((result)=>{ \n              shoes변경( [...shoes, ...result.data] )\n            })\n            .catch(()=>{ \n              console.log('실패했어요')\n            })\n\n          }}>더보기</button>\n        </div>\n\n      </Route>\n\n      <Route path=\"/detail/:id\">\n        \n        <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\n\n      </Route>\n\n      <Route path=\"/cart\">\n\n        <Cart></Cart>\n\n      </Route>\n\n      <Route path=\"/:id\">\n        <div>우측 상단의 홈으로 이동해주세요!</div>\n      </Route>\n\n    </Switch>\n\n      {/* component를 넣고 싶을때, <Route path=\"/주소\" component={컴포넌트}> </Route> */}\n\n      \n      \n    </div>\n  );\n}\n\nfunction Card(props){\n  let history = useHistory();\n  return(\n    <div className=\"col-md-4\" onClick= { ()=> { history.push('/detail/' + props.shoes.id ) }}>\n      <img src={ 'https://codingapple1.github.io/shop/shoes' + (props.i + 1) +'.jpg' } width=\"100%\"/>\n      <h4>{props.shoes.title}</h4>\n      <p>{props.shoes.content} & {props.shoes.price}</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nlet 기본state = [{id : 0, name : '멋진신발', quan : 2}, {id : 1, name : '멋진신발2', quan : 1}];\n\nfunction reducer(state = 기본state, 액션){\n  if(액션.type === '수량증가') {\n    let copy = [...state];\n    copy[액션.데이터].quan++;\n    return copy\n  } else if(액션.type === '수량감소') {\n    let copy = [...state];\n    copy[액션.데이터].quan--;\n    return copy\n  } else if(액션.type === '항목추가') {\n    let copy = [...state];\n    copy.push(액션.payload);\n    return copy;\n  } else {\n    return state\n  }\n}\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if(액션.type === '닫기') {\n    let copy = state;\n    copy = false;\n    return copy\n  } else {\n    return state\n  }\n}\n\nlet store = createStore( combineReducers({reducer, reducer2}));\n\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}